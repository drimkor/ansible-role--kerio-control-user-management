---

- name: Render variables
  no_log: true
  block:
    - name: Render delete users list
      ansible.builtin.set_fact:
        kctl_users_list_delete: "{{ kctl_users_list_delete | default([]) + [item.id] }}"
        kctl_report_list_delete: "{{ kctl_report_list_delete | default([]) +
          [{'id': item.id, 'user_name': item.credentials.userName, 'full_name': item.fullName}] }}"
      with_items: "{{ kctl_users_get_response.json.result.list }}"
      when:
        - item.credentials.userName not in kctl_users | map(attribute='kctl_user_name')
        - item.credentials.userName not in kctl_protected_users

    - name: Render 'create user list' without policies applied
      ansible.builtin.set_fact:
        kctl_users_list_create: "{{ kctl_users_list_create | default([]) + [kctl_user_data] }}"
      with_items: "{{ kctl_users }}"
      when:
        - not kctl_user_creating_polices_enable
        - item.kctl_user_name not in kctl_users_get_response.json.result.list | map(attribute='credentials.userName')

    - name: Render 'create user list' with policies applied
      ansible.builtin.set_fact:
        kctl_users_list_create: "{{ kctl_users_list_create | default([]) + [kctl_user_data | combine(kctl_user_creating_polices, recursive=true)] }}"
      with_items: "{{ kctl_users }}"
      when:
        - kctl_user_creating_polices_enable
        - item.kctl_user_name not in kctl_users_get_response.json.result.list | map(attribute='credentials.userName')

    - name: User variables render from kctl_users_get_response
      ansible.builtin.set_fact:
        kctl_users_host: "{{ kctl_users_host | default([]) + [kctl_user_config_vars_template] }}"
      with_items: "{{ kctl_users_get_response.json.result.list }}"

    - name: User variables render from user configuration for users in kctl_users_get_response
      ansible.builtin.set_fact:
        kctl_users_conf: "{{ kctl_users_conf | default([]) + [kctl_user_config_vars_template] }}"
      with_items: "{{ kctl_users }}"
      when:
        - item.kctl_user_name in kctl_users_get_response.json.result.list | map(attribute='credentials.userName')

    - name: Render username list for update
      ansible.builtin.set_fact:
        kctl_username_list_update: "{{ kctl_users_conf | difference(kctl_users_host) | map(attribute='kctl_user_name') }}"
      when:
        - kctl_users_conf is defined

    - name: Render update users list
      ansible.builtin.set_fact:
        kctl_users_list_update: "{{ kctl_users_list_update | default([]) +
          [{'user_id': kctl_users_get_response.json.result.list |
          selectattr('credentials.userName', '==', item.kctl_user_name) |
          map(attribute='id'), 'user_details': kctl_user_data}] }}"
      with_items: "{{ kctl_users }}"
      when:
        - kctl_username_list_update is defined
        - item.kctl_user_name in kctl_username_list_update
        - item.kctl_user_name not in kctl_protected_users
  rescue:
    - name: Collect task errors
      ansible.builtin.set_fact:
        kctl_task_errors: "{{ kctl_task_errors | default([]) +
          [{'kctl_error_task_name': ansible_failed_task.name, 'kctl_error_task_msg': ansible_failed_result.msg}] }}"

...
