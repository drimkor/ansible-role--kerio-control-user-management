---

- name: Updation users
  no_log: true
  block:
    - name: Update user
      ansible.builtin.uri:
        url: "{{ kctl_api_url }}"
        validate_certs: "{{ kctl_validate_certs }}"
        timeout: "{{ kctl_api_connection_timeout }}"
        method: POST
        headers:
          Cookie: "{{ kctl_logon_response.cookies_string }}"
          X-Token: "{{ kctl_logon_response.json.result.token }}"
        body_format: json
        body: |
          {
            "jsonrpc":"2.0","id":1,"method":"Batch.run",
            "params":
              {
                "commandList":
                  [
                    {
                      "method":"Users.set",
                      "params":
                        {
                          "userIds":{{ item.user_id }},
                          "details":{{ item.user_details }},
                          "domainId":"{{ kctl_domain_id }}"
                        }
                    }
                  ]
              }
          }
      with_items: "{{ kctl_users_list_update }}"
      register: kctl_users_update_response
      delegate_to: localhost

    - name: Update user - Reloads configuration and returns timestamp
      ansible.builtin.uri:
        url: "{{ kctl_api_url }}"
        validate_certs: "{{ kctl_validate_certs }}"
        timeout: "{{ kctl_api_connection_timeout }}"
        method: POST
        headers:
          Cookie: "{{ kctl_logon_response.cookies_string }}"
          X-Token: "{{ kctl_logon_response.json.result.token }}"
        body_format: json
        body: |
          {
            "jsonrpc":"2.0","id":1,"method":"Session.getConfigTimestamp"
          }
      register: kctl_get_config_timestamp_response
      delegate_to: localhost

    - name: Collect API errors
      ansible.builtin.set_fact:
        kctl_api_error: "{{ kctl_api_error | default([]) +
          [{'kctl_api_error_task_name': 'Update user - Reloads configuration and returns timestamp',
              'kctl_api_error_msg': kctl_get_config_timestamp_response.json.error}] }}"
      when: kctl_get_config_timestamp_response.json.error is defined

    - name: Update user - Timestamp list
      ansible.builtin.set_fact:
        kctl_timestamp_list_update: "{{ kctl_timestamp_list_update | default([]) + [item] }}"
      with_items: "{{ kctl_get_config_timestamp_response.json.result.clientTimestampList }}"
      when: kctl_get_config_timestamp_response.json.result.clientTimestampList is defined

    - name: Update user - Confirm config
      ansible.builtin.uri:
        url: "{{ kctl_api_url }}"
        validate_certs: "{{ kctl_validate_certs }}"
        timeout: "{{ kctl_api_connection_timeout }}"
        method: POST
        headers:
          Cookie: "{{ kctl_logon_response.cookies_string }}"
          X-Token: "{{ kctl_logon_response.json.result.token }}"
        body_format: json
        body: |
          {
            "jsonrpc":"2.0","id":1,"method":"Session.confirmConfig",
            "params":
              {
                "clientTimestampList":{{ kctl_timestamp_list_update }}
              }
          }
      register: kctl_confirmation_update
      when: kctl_timestamp_list_update is defined
      delegate_to: localhost

    - name: Collect API errors
      ansible.builtin.set_fact:
        kctl_api_error: "{{ kctl_api_error | default([]) +
          [{'kctl_api_error_task_name': 'Update user - Confirm Config',
              'kctl_api_error_msg': kctl_confirmation_update.json.error}] }}"
      when: kctl_confirmation_update.json.error is defined
  rescue:
    - name: Collect task errors
      ansible.builtin.set_fact:
        kctl_task_errors: "{{ kctl_task_errors | default([]) +
          [{'kctl_error_task_name': ansible_failed_task.name, 'kctl_error_task_msg': ansible_failed_result.msg}] }}"

...
